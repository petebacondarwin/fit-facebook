(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";
"use strict";
"use strict";
var ngModule = angular.module('FitFacebook', ['ff.coreModule']);
require('./modules/ff-core/ff.core.app.js');


//# sourceURL=/Users/rafaelfernandes/Projects/fit-facebook/www/public/app.js
},{"./modules/ff-core/ff.core.app.js":2}],2:[function(require,module,exports){
"use strict";
"use strict";
"use strict";
angular.module('ff.coreModule', []).controller('ffCoreController', require('./ff.core.controller.js'));


//# sourceURL=/Users/rafaelfernandes/Projects/fit-facebook/www/public/modules/ff-core/ff.core.app.js
},{"./ff.core.controller.js":3}],3:[function(require,module,exports){
"use strict";
"use strict";
"use strict";
module.exports = ['$scope', ffCoreController];
function ffCoreController($scope) {
  var vm = this;
}


//# sourceURL=/Users/rafaelfernandes/Projects/fit-facebook/www/public/modules/ff-core/ff.core.controller.js
},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
